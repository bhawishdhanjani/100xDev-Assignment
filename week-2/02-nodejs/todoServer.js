/**
  You need to create an express HTTP server in Node.js which will handle the logic of a todo list app.
  - Don't use any database, just store all the data in an array to store the todo list data (in-memory)
  - Hard todo: Try to save responses in files, so that even if u exit the app and run it again, the data remains (similar to databases)

  Each todo has a title and a description. The title is a string and the description is a string.
  Each todo should also get an unique autogenerated id every time it is created
  The expected API endpoints are defined below,
  1.GET /todos - Retrieve all todo items
    Description: Returns a list of all todo items.
    Response: 200 OK with an array of todo items in JSON format.
    Example: GET http://localhost:3000/todos
    
  2.GET /todos/:id - Retrieve a specific todo item by ID
    Description: Returns a specific todo item identified by its ID.
    Response: 200 OK with the todo item in JSON format if found, or 404 Not Found if not found.
    Example: GET http://localhost:3000/todos/123
    
  3. POST /todos - Create a new todo item
    Description: Creates a new todo item.
    Request Body: JSON object representing the todo item.
    Response: 201 Created with the ID of the created todo item in JSON format. eg: {id: 1}
    Example: POST http://localhost:3000/todos
    Request Body: { "title": "Buy groceries", "completed": false, description: "I should buy groceries" }
    
  4. PUT /todos/:id - Update an existing todo item by ID
    Description: Updates an existing todo item identified by its ID.
    Request Body: JSON object representing the updated todo item.
    Response: 200 OK if the todo item was found and updated, or 404 Not Found if not found.
    Example: PUT http://localhost:3000/todos/123
    Request Body: { "title": "Buy groceries", "completed": true }
    
  5. DELETE /todos/:id - Delete a todo item by ID
    Description: Deletes a todo item identified by its ID.
    Response: 200 OK if the todo item was found and deleted, or 404 Not Found if not found.
    Example: DELETE http://localhost:3000/todos/123

    - For any other route not defined in the server return 404

  Testing the server - run `npm run test-todoServer` command in terminal
 */
  const express = require('express');
  const bodyParser = require('body-parser');
  const fs = require('fs');
  const { log } = require('console');
  const { randomUUID } = require('crypto');
  
  const app = express();
  app.use(bodyParser.json());
  function writeTodos(todos){
    fs.writeFile('todos.json', JSON.stringify(todos) , err=>{
      if(err)
        console.log("Error occured while saving tods");
    } )

  }

  let todos ;
  try {
    todos = fs.readFileSync("todos.json","utf-8");
    todos = JSON.parse(todos);
  } catch (error) {
    console.log("Not able to read the file");    
  }

  app.get('/todos',(req,res)=>{
    res.status(200).json(todos);
  });

  app.get("/todos/:id",(req,res)=>{
    let id = req.params["id"];
    result = todos.filter(todo=> {
      return todo["id"] == id 
    })
    if(result.length==1)
      res.status(200).json(result[0]);
    else
      res.status(404).json({error : "Data not found"});
  })

  app.post('/todos',(req,res)=>{
    let body = req.body;
    let todo = {
      id: randomUUID(),
      title: body["title"],
      description: body["description"]
    }
    todos.push(todo);
    writeTodos(todos);
    res.status(201).json({id: todo["id"]});
  });

  app.put("/todos/:id",(req,res)=>{
    let todoId = req.params["id"];
    let body = req.body;
    let index = -1;
    result = todos.filter(todo=> {
      return todo["id"] == todoId 
    })
    if(result.length==1){
      index = todos.indexOf(result[0]);
      let todo = {
        id: result[0]["id"],
        title: body["title"] || result[0]["title"],
        description: body["description"] || result[0]["id"]
      }
      todos[index]= todo;
      writeTodos(todos);
      res.status(200).json(todos);
    }
    else
      res.status(404);
  })


  
  app.delete("/todos/:id",(req,res)=>{
    let todoId = req.params["id"];
    let body = req.body;
    let index = -1;
    result = todos.filter(todo=> {
      return todo["id"] == todoId 
    })
    if(result.length==1){
      index = todos.indexOf(result[0]);
      todos.splice(index,1);
      writeTodos(todos);
      res.status(200).json(todos);

    }
    else
      res.status(404);
  })


  // app.listen(3000);


  





  module.exports = app;